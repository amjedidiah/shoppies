{"version":3,"sources":["serviceWorkerRegistration.js","reportWebVitals.js","redux/selectors.js","utils/shoppiesAPI.js","redux/actions/nominations.js","redux/actions/types.js","components/container/BtnGroup.js","utils/omdbAPI.js","components/container/MovieCard.js","components/controlled/Search.js","assets/img/logo.png","components/presentation/Header.js","assets/img/award1.png","components/presentation/Jumbo.js","components/container/Nominations.js","components/presentation/Footer.js","utils/makeid.js","components/container/App.js","redux/actions/shared.js","redux/actions/authedUser.js","redux/reducers/authedUser.js","redux/reducers/nominations.js","redux/reducers/index.js","redux/middleware/logger.js","redux/middleware/index.js","redux/store.js","index.js"],"names":["Boolean","window","location","hostname","match","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","getAuthedUserNominations","authedUser","nominations","getNominations","filter","userID","getIfInMyNominations","imdbID","map","n","includes","getIfNominatedByAuthedUser","nomination","dbNom","storeNom","action","sort","a","b","createdAt","shoppiesAPI","axios","create","baseURL","timeout","receiveNominations","type","BtnGroup","props","className","btnColor","shouldDisplay","ifNominatedByAuthedUser","ifInMyNominations","onClick","e","stopPropagation","handleUpdateNominations","defaultProps","connect","dispatch","getState","authedUserNominations","length","alert","updateNominations","data","catch","err","console","log","finally","omdbAPI","MovieCard","state","movie","fetchMovie","i","get","params","setState","componentDidMount","render","Genre","Poster","Title","Year","xtraClassName","card","src","img","alt","srcSet","width","info","Component","Search","page","results","s","status","totalResults","search","setPage","placeholder","aria-label","id","data-toggle","aria-haspopup","onChange","target","value","aria-labelledby","Math","floor","Header","href","logo","loading","Jumbo","award1","Nominations","renderNoms","noms","_id","Footer","makeid","result","characters","charactersLength","charAt","random","App","handleInitialData","showLoading","localStorage","setItem","SET_AUTHED_USER","getItem","RECEIVE_NOMINATIONS","SAVE_NOMINATION","REMOVE_NOMINATION","RESOLVE_NOMINATIONS","combineReducers","loadingBar","loadingBarReducer","logger","store","next","group","returnValue","groupEnd","applyMiddleware","thunk","createStore","reducers","middleware","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.25ab27fe.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/**\n * Get nominations for authed user\n * @param {string} authedUser - authed user from state\n * @param {nomination[]} nominations - nominations from state\n * @return {nomination[]}\n */\nexport const getAuthedUserNominations = (authedUser, nominations) =>\n  getNominations(nominations).filter(({userID}) => authedUser === userID);\n\n/**\n * Determines if particluar movie is in authedUser nominations\n * @param {string} authedUser - authed user from state\n * @param {string} imdbID - imdb ID of a movie\n * @param {nomination[]} nominations - nominations from state\n * @return {boolean}\n */\nexport const getIfInMyNominations = (authedUser, imdbID, nominations) =>\n  getAuthedUserNominations(authedUser, nominations)\n      .map((n) => n.imdbID)\n      .includes(imdbID);\n\n/**\n * Determines if the authed user made a particular nomination\n * @param {string} authedUser - authed user from state\n * @param {nomination} nomination - A single nomination\n * @return {boolean}\n */\nexport const getIfNominatedByAuthedUser = (authedUser, nomination) =>\n  nomination?.userID ===\n  authedUser;\n\n/**\n * Get nominations for authed user\n * @param {nomination[]} nominations - nominations from state\n * @return {nomination[]}\n */\nexport const getNominations = (nominations) => {\n  const {dbNom, storeNom} = nominations;\n\n  return (storeNom.action === 'nominate' ?\n    [...dbNom, storeNom?.nomination] :\n    dbNom.filter(\n        (n) =>\n          n.imdbID !== storeNom?.nomination?.imdbID &&\n          n.userID !== storeNom?.nomination?.userID,\n    )\n  ).sort((a, b) =>\n    a.createdAt < b.createdAt ? 1 : b.createdAt < a.createdAt ? -1 : 0,\n  );\n};\n","// axiosconfig.js\r\nimport axios from 'axios';\r\n\r\n// configure base url\r\nconst shoppiesAPI = axios.create({\r\n  baseURL: 'http://localhost:8008/api',\r\n  timeout: 60000,\r\n});\r\n\r\nexport default shoppiesAPI;\r\n","// Type imports\nimport {\n  RECEIVE_NOMINATIONS,\n  REMOVE_NOMINATION,\n  RESOLVE_NOMINATIONS,\n  SAVE_NOMINATION,\n} from 'redux/actions/types';\n\n// Selector imports\nimport {getAuthedUserNominations} from 'redux/selectors';\n\n// Util imports\nimport shoppiesAPI from 'utils/shoppiesAPI';\n\n/**\n/**\n * Action creator for received nominations\n * @param {nominations} nominations - Nominations received from fetch\n * @return {action} - Action to dispatch\n */\nexport const receiveNominations = (nominations) => ({\n  type: RECEIVE_NOMINATIONS,\n  nominations,\n});\n\n/**\n * Action creator to update nominations\n * @param {string} action - Action to perform with nomination\n * @param {nomination} nomination - Nomination\n * @return {action} - Action to dispatch\n */\nexport const updateNominations = (action, nomination) => ({\n  type: action === 'nominate' ? SAVE_NOMINATION : REMOVE_NOMINATION,\n  action,\n  nomination,\n});\n\n/**\n * Action creator to update nominations\n * @param {string} action - Action to perform with nomination\n * @param {nomination} nomination - Nomination\n * @return {action} - Action to dispatch\n */\nexport const handleUpdateNominations = (action, nomination) => (\n    dispatch,\n    getState,\n) => {\n  const {authedUser, nominations} = getState();\n\n  const authedUserNominations = getAuthedUserNominations(\n      authedUser,\n      nominations,\n  );\n\n  if (action === 'nominate' && authedUserNominations.length === 5) {\n    return alert('The maximum amount of nominations is 5');\n  }\n\n  dispatch(updateNominations(action, nomination));\n\n  return shoppiesAPI[action === 'nominate' ? 'post' : 'delete'](\n      `/nominations${\n      action === 'cancel' ?\n        `?imdbID=${nomination.imdbID}&&userID=${nomination.userID}` :\n        ''\n      }`,\n      nomination,\n  )\n      .then(({data}) => dispatch(receiveNominations(data.data)))\n      .catch((err) => console.log(err))\n      .finally(() => dispatch({type: RESOLVE_NOMINATIONS}));\n};\n","\n/**\n * @const {string}\n */\nexport const RECEIVE_NOMINATIONS = 'RECEIVE_NOMINATIONS';\n\n/**\n * @const {string}\n */\nexport const REMOVE_NOMINATION = 'REMOVE_NOMINATION';\n\n/**\n * @const {string}\n */\nexport const RESOLVE_NOMINATIONS = 'RESOLVE_NOMINATIONS';\n\n/**\n * @const {string}\n */\nexport const SAVE_NOMINATION = 'SAVE_NOMINATION';\n\n/**\n * @const {string}\n */\nexport const SET_AUTHED_USER = 'SET_AUTHED_USER';\n","// Module imports\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {FaThumbsUp, FaTrash} from 'react-icons/fa';\n\n// Action creator imports\nimport {handleUpdateNominations} from 'redux/actions/nominations';\n\n/**\n * BtnGroup component\n * @component\n * @param {{\n *          authedUser: string,\n *          handleUpdateNominations: function,\n *          ifNominatedByAuthedUser: boolean,\n *          ifInMyNominations: booelan,\n *          imdbID: string}} props\n * @return {object} - The UI DOM object\n *\n * @example\n * const ifInMyNominations=false\n * const ifNominatedByAuthedUser=false\n * const imdbID=''\n *\n * return <BtnGroup\n *          ifInMyNominations={ifInMyNominations}\n *          ifNominatedByAuthedUser={ifNominatedByAuthedUser}\n *          imdbID={imdbID}\n *        />\n */\nconst BtnGroup = (props) => (\n  <div>\n    <p className=\"my-2\">\n      {['cancel', 'nominate'].map((action) => {\n        /**\n         * @type {string} - Button color\n         */\n        const btnColor = action === 'cancel' ? 'danger' : 'success';\n\n        /**\n         * @type {boolean}\n         */\n        const shouldDisplay =\n          (props.ifNominatedByAuthedUser && action === 'cancel') ||\n          (!props.ifNominatedByAuthedUser &&\n            !props.ifInMyNominations &&\n            action === 'nominate');\n\n        return (\n          <button\n            key={action}\n            className={`btn btn-outline-${btnColor} ${\n              !shouldDisplay && 'd-none'\n            } rounded-pill text-uppercase`}\n            type=\"button\"\n            onClick={(e) => {\n              e.stopPropagation();\n              props.handleUpdateNominations(action, {\n                userID: props.authedUser,\n                imdbID: props.imdbID,\n              });\n            }}\n          >\n            <span className=\"mr-2\">\n              {action === 'cancel' ? <FaTrash /> : <FaThumbsUp />}\n            </span>\n            {action}\n          </button>\n        );\n      })}\n    </p>\n  </div>\n);\n\nBtnGroup.propTypes = {\n  /**\n   * BtnGroup authedUser\n   */\n  authedUser: PropTypes.string,\n  /**\n   * BtnGroup handleUpdateNominations\n   */\n  handleUpdateNominations: PropTypes.func,\n  /**\n   * BtnGroup ifInMyNominations\n   */\n  ifInMyNominations: PropTypes.bool,\n  /**\n   * BtnGroup ifNominatedByAuthedUser\n   */\n  ifNominatedByAuthedUser: PropTypes.bool,\n  /**\n   * BtnGroup imdbID\n   */\n  imdbID: PropTypes.string,\n};\n\nBtnGroup.defaultProps = {\n  authedUser: '',\n  handleUpdateNominations: () => {},\n  ifInMyNominations: false,\n  ifNominatedByAuthedUser: false,\n  imdbID: '',\n};\n\nconst mapStateToProps = ({authedUser}) => ({\n  authedUser,\n});\n\n// BtnGroup export\nexport default connect(mapStateToProps, {handleUpdateNominations})(BtnGroup);\n","// axiosconfig.js\r\nimport axios from 'axios';\r\n\r\n// configure base url\r\nconst omdbAPI = axios.create({\r\n  baseURL: 'http://www.omdbapi.com',\r\n  timeout: 60000,\r\n});\r\n\r\nexport default omdbAPI;\r\n","// Module imports\nimport {Component} from 'react';\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\n\n// Component import\nimport BtnGroup from 'components/container/BtnGroup';\n\n// API import\nimport omdbAPI from 'utils/omdbAPI';\nimport {\n  getIfInMyNominations,\n  getIfNominatedByAuthedUser,\n} from 'redux/selectors';\n\n/**\n * MovieCard component\n * @component\n * @constructor\n *\n * @example\n * const imdbID=''\n * const movie={}\n * const nomination={}\n * const xtraClassName={}\n *\n * return <MovieCard\n *          imdbID={imdbID}\n *          movie={movie}\n *          nomination={nomination}\n *          xtraClassName={xtraClassName}\n *        />\n */\nclass MovieCard extends Component {\n  state = {\n    movie: {},\n  };\n\n  static propTypes = {\n    /**\n     * MovieCard ifInMyNominations\n     */\n    ifInMyNominations: PropTypes.bool,\n    /**\n     * MovieCard ifNominatedByAuthedUser\n     */\n    ifNominatedByAuthedUser: PropTypes.bool,\n    /**\n     * MovieCard imdbID\n     */\n    imdbID: PropTypes.string,\n    /**\n     * MovieCard movie\n     */\n    movie: PropTypes.object,\n    /**\n     * MovieCard nomination\n     */\n    nomination: PropTypes.object,\n    /**\n     * MovieCard xtraClassName\n     */\n    xtraClassName: PropTypes.object,\n  };\n\n  static defaultProps = {\n    ifNominatedByAuthedUser: false,\n    imdbID: '',\n    movie: {},\n    nomination: {},\n    xtraClassName: {},\n  };\n\n  /**\n   * Fetch single movie using imdbID\n   * @param {string} i - Movie imdbID\n   * @return {Promise<object>}\n   */\n  fetchMovie = (i) =>\n    omdbAPI\n        .get('/?apikey=ce4b5ffd', {params: {i}})\n        .then(({data}) => this.setState(() => ({movie: data})))\n        .catch((err) => console.log(err));\n\n  /**\n   * Executes once MovieCard component mounts\n   * @return {function}\n   */\n  componentDidMount = () => {\n    const {imdbID, movie} = this.props;\n\n    return imdbID ? this.fetchMovie(imdbID) : this.setState(() => ({movie}));\n  };\n\n  /**\n   * Renders the MovieCard UI\n   * @return {object} - The UI DOM object\n   */\n  render = () => {\n    const {Genre, imdbID, Poster, Title, Year} = this.state.movie;\n    const {\n      ifInMyNominations,\n      ifNominatedByAuthedUser,\n      nomination,\n      xtraClassName,\n    } = this.props;\n\n    return (\n      <div className={`bg-white ${xtraClassName?.card}`}>\n        {Poster && Poster !== 'N/A' && (\n          <div className=\"img-holder\">\n            <img\n              src={Poster}\n              className={`img-fluid ${xtraClassName?.img}`}\n              alt={Title}\n              srcSet={`${Poster} 4.18x`}\n              width=\"100\"\n            />\n          </div>\n        )}\n        <div className={xtraClassName?.info}>\n          <p className=\"lead text-truncate\">\n            <strong>{Title}</strong>\n          </p>\n          <p className=\"text-truncate\">\n            <span className=\"badge badge-primary--custom\n            text-white\">\n              {Year} {this.props.imdbID && ` | ${Genre}`}\n            </span>\n          </p>\n\n          {this.props.imdbID && (\n            <p className=\"text-right\">\n              by {!ifNominatedByAuthedUser ? nomination?.userID : 'me'}\n            </p>\n          )}\n\n          <BtnGroup\n            ifNominatedByAuthedUser={\n              this.props.imdbID ? ifNominatedByAuthedUser : ifInMyNominations\n            }\n            ifInMyNominations={ifInMyNominations}\n            imdbID={imdbID}\n          />\n        </div>\n      </div>\n    );\n  };\n}\n\nconst mapStateToProps = (\n    {authedUser, nominations},\n    {movie, nomination},\n) => ({\n  ifInMyNominations: getIfInMyNominations(\n      authedUser,\n      movie?.imdbID,\n      nominations,\n  ),\n  ifNominatedByAuthedUser: getIfNominatedByAuthedUser(authedUser, nomination),\n});\n\n// MovieCard export\nexport default connect(mapStateToProps)(MovieCard);\n","// Module imports\nimport {Component} from 'react';\n\n// Component imports\nimport MovieCard from 'components/container/MovieCard';\nimport omdbAPI from 'utils/omdbAPI';\n\n/**\n * Search component\n * @component\n * @constructor\n *\n * @example\n *\n * return <Search />\n */\nclass Search extends Component {\n  state = {\n    page: 1,\n    results: [],\n    s: '',\n    status: 'Type at least 3 characters to trigger a search...',\n    totalResults: 0,\n  };\n\n  /**\n   * Searches for movies\n   * @param {string} [s]\n   * @param {number} [page]\n   * @return {Promise}\n   */\n  search = (s = this.state.s, page = this.state.page) =>\n    this.setState(\n        {\n          results: [],\n          status: 'Loading movie results',\n          totalResults: 0,\n        },\n        () =>\n          omdbAPI\n              .get('/?apikey=ce4b5ffd', {params: {s, page: this.state.page}})\n              .then(({data}) => {\n                const results = data.Search;\n\n                return this.setState(() =>\n              results ?\n                {\n                  results,\n                  status: 'Type at least 3 characters to trigger a search...',\n                  totalResults: data.totalResults,\n                } :\n                {status: data['Error']},\n                );\n              })\n              .catch((err) =>\n                this.setState(\n                    () => ({\n                      results: [],\n                      status: 'Movie not found!',\n                      totalResults: 0,\n                    }),\n                    () => console.log(err),\n                ),\n              ),\n    );\n\n  /**\n   * Sets search page result\n   * @param {string} b\n   * @return {Promise<object>}\n   */\n  setPage = (b) =>\n    this.setState(\n        ({page}) => ({page: b === 'prev' ? page - 1 : page + 1}),\n        () => this.search(),\n    );\n\n  /**\n   * Renders Search component UI\n   * @return {object} - The UI DOM object\n   */\n  render = () => {\n    const {page, results, status, totalResults} = this.state;\n\n    /**\n     * @type {string} - class for searchImages\n     */\n    const imgClass =\n      'img-fluid--search ${3|rounded-top,rounded-right,rounded-bottom' +\n      ',rounded-left,rounded-circle,|}';\n\n    return (\n      <form className=\"form-inline form--header flex-grow-1 mr-lg-5\">\n        <div\n          className=\"input-group input-group--custom\n      input--search rounded-pill\"\n        >\n          <div className=\"input-group-prepend--custom border-0 py-2\">\n            <div\n              className=\"input-group-text bg-transparent\n          border-0 text-primary--custom\"\n            >\n              <i className=\"fas fa-search\"></i>\n            </div>\n          </div>\n          <input\n            type=\"search\"\n            className=\"form-control form-control--custom\n          rounded-pill py-1 dropdown-toggle\"\n            placeholder=\"Search movie...\"\n            aria-label=\"Search\"\n            id=\"dropdownSearchInput\"\n            data-toggle=\"dropdown\"\n            aria-haspopup=\"true\"\n            onChange={({target}) =>\n              this.setState(\n                  () => ({\n                    s: target.value,\n                    results: [],\n                    status: 'Type at least 3 characters to trigger a search...',\n                  }),\n                  () => target.value.length > 2 && this.search(target.value),\n              )\n            }\n          />\n          <ul\n            className=\"dropdown-menu dropdown-menu-bottom p-4 w-100 rounded\"\n            aria-labelledby=\"dropdownSearchInput\"\n          >\n            {results.length > 0 ? (\n              <>\n                <li className=\"dropdown-header px-0 text-uppercase\">\n                  Related movies\n                </li>\n                {results.map((movie) => (\n                  <li key={movie?.imdbID} className=\"dropdown-item p-0 mb-3\">\n                    <MovieCard\n                      movie={movie}\n                      xtraClassName={{\n                        card: 'd-flex align-items-start',\n                        img: imgClass,\n                        info: 'p-3',\n                      }}\n                    />\n                    <div className=\"dropdown-divider\"></div>\n                  </li>\n                ))}\n                <p>\n                  {['prev', 'next'].map(\n                      (b) =>\n                        ((b === 'prev' && page !== 1) ||\n                        (b === 'next' &&\n                          totalResults !== 0 &&\n                          page <= Math.floor(totalResults / 10))) && (\n                          <button\n                            key={b}\n                            className=\"btn btn-outline--primary-2\n                            btn-prop ml-auto\"\n                            type=\"button\"\n                            onClick={(e) => {\n                              e.stopPropagation();\n                              this.setPage(b);\n                            }}\n                          >\n                            {b}\n                          </button>\n                        ),\n                  )}\n                </p>\n              </>\n            ) : (\n              <li className=\"dropdown-text px-0\">{status}</li>\n            )}\n          </ul>\n        </div>\n      </form>\n    );\n  };\n}\n\n// Search export\nexport default Search;\n","export default __webpack_public_path__ + \"static/media/logo.fd535fbe.png\";","// Component imports\nimport Search from 'components/controlled/Search';\n\n// Asset imports\nimport logo from 'assets/img/logo.png';\nimport 'assets/css/header.css';\n\n/**\n * Header component\n * @component\n * @return {object} - The UI DOM object\n *\n * @example\n *\n * return <Header />\n */\nconst Header = () => (\n  <header>\n    <nav\n      className=\"navbar navbar-expand navbar-light bg-transparent fixed-top\"\n      id=\"header\"\n    >\n      <div className=\"container d-flex align-items-center\">\n        <a className=\"navbar-brand d-block just-height\" href=\"/#\">\n          <img\n            src={logo}\n            alt=\"Shoppies logo\"\n            className=\"img-fluid\"\n            width=\"100\"\n            loading=\"lazy\"\n          />\n        </a>\n        <Search />\n        <ul className=\"navbar-nav mr-auto ml-auto\">\n          <li className=\"nav-item\">\n            <a className=\"nav-link nav-link--custom\" href=\"#nominations\">\n              Nominations\n            </a>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  </header>\n);\n\n// Header export\nexport default Header;\n","export default __webpack_public_path__ + \"static/media/award1.7a972d81.png\";","// Asset imports\nimport award1 from 'assets/img/award1.png';\nimport 'assets/css/jumbo.css';\n\n/**\n * Jumbo component\n * @component\n * @return {object} - The UI DOM object\n *\n * @example\n * return <Jumbo />\n */\nconst Jumbo = () => (\n  <section className=\"jumbotron jumbotron-fluid bg-primary--custom text-white\">\n    <h2 className=\"d-none\">Jumbotron</h2>\n    <article className=\"container h-100\">\n      <div className=\"row align-items-center h-100\">\n        <div className=\"col-12 col-lg-7\">\n          <h3 className=\"jumbo-title\">\n            Shoppies{' '}\n            <span\n              className=\"award-text text-primary--custom--2\n             font-weight-bold\"\n            >\n              Award\n            </span>\n            <span\n              className=\"p-1 p-sm-2 bg-primary--custom--2\n            just-width just-height d-inline-block\"\n            ></span>\n          </h3>\n          <p className=\"lead my-4\">\n            We honour the best. Every movie has a story, but a few become epics.\n            These are the ones we honour\n          </p>\n        </div>\n        <div className=\"d-none d-lg-block col-lg offset-lg-1\">\n          <div className=\"img-holder pt-xl-5\">\n            <img src={award1} className=\"img-fluid\" alt=\"award\" />\n          </div>\n        </div>\n      </div>\n    </article>\n  </section>\n);\n\n// Jumbo export\nexport default Jumbo;\n","// Module imports\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\n\n// Component imports\nimport MovieCard from 'components/container/MovieCard';\n\n// Asset imports\nimport 'assets/css/nominations.css';\nimport {getAuthedUserNominations, getNominations} from 'redux/selectors';\n\n/**\n * @component\n * @return {object} - The UI DOm object\n *\n * @example\n * return <Nominations />\n */\nconst Nominations = ({authedUser, authedUserNominations, nominations}) => {\n  /**\n   * Render nominations\n   * @param {array} noms\n   * @param {string} [xtraClassName]\n   * @return {object}\n   */\n  const renderNoms = (noms = [], xtraClassName) =>\n    noms.map((nomination) => (\n      <div key={nomination?._id} className={`mb-4 nomination ${xtraClassName}`}>\n        <MovieCard\n          imdbID={nomination?.imdbID}\n          nomination={nomination}\n          xtraClassName={{\n            card: 'shadow',\n            img: 'w-100',\n            info: 'p-2',\n          }}\n        />\n      </div>\n    ));\n\n  return (\n    <section id=\"nominations\">\n      <h2 className=\"d-none\">Nominations</h2>\n\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-12 col-lg\">\n            <div className=\"my-3 rounded\">\n              <h4 className=\"text-gold font-weight-bold\">Recent Nominations</h4>\n\n              <div className=\"d-flex flex-wrap mt-3 row--nomination\">\n                {renderNoms(nominations)}\n              </div>\n            </div>\n          </div>\n          {authedUser && (\n            <div className=\"col-12 col-lg-3 col-xl-5\">\n              <div className=\"my-3 rounded\">\n                <h4 className=\"text-gold font-weight-bold\">Your Nominations</h4>\n\n                <div className=\"d-flex flex-wrap mt-3 row--nomination\">\n                  {renderNoms(authedUserNominations, 'nomination--yours')}\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nNominations.propTypes = {\n  /**\n   * Nominations authedUser\n   */\n  authedUser: PropTypes.string,\n  /**\n   * Nominations authedUserNominations\n   */\n  authedUserNominations: PropTypes.array,\n  /**\n   * Nominations nominations\n   */\n  nominations: PropTypes.array,\n};\n\nNominations.defaultProps = {\n  authedUser: '',\n  authedUserNominations: [],\n  nominations: [],\n};\n\nconst mapStateToProps = ({authedUser, nominations}) => ({\n  authedUser,\n  authedUserNominations: getAuthedUserNominations(authedUser, nominations),\n  nominations: getNominations(nominations),\n});\n\n// Nominations export\nexport default connect(mapStateToProps)(Nominations);\n","// Module imports\nimport {FaLinkedinIn, FaGithub} from 'react-icons/fa';\n\n/**\n * Footer component\n * @component\n * @return {object} - The UI DOM object\n */\nconst Footer = () => (\n  <footer>\n    <div className=\"container\">\n      <div className=\"d-flex shadow bg-white p-3\">\n        <div className=\"flex-grow-1\">amjedidiah &copy; 2021</div>\n        <div className=\"text-right\">\n          <a\n            href=\"https://github.com/amjedidiah\"\n            className=\"mr-3 large text-primary--custom-2\"\n          >\n            <span aria-label=\"Github\" className=\"text-primary--custom-2\">\n              <FaGithub />\n            </span>\n          </a>\n          <a\n            href=\"https://www.linkedin.com/in/am-jedidiah/\"\n            className=\"mr-3 large text-primary--custom-2\"\n          >\n            <span aria-label=\"LinkedIn\" className=\"text-primary--custom-2\">\n              <FaLinkedinIn />\n            </span>\n          </a>\n        </div>\n      </div>\n    </div>\n  </footer>\n);\n\n// Footer export\nexport default Footer;\n","/**\r\n   * Generates authedUser\r\n   * @param {string} length - The length of the returned id\r\n   * @return {string}\r\n   */\r\nconst makeid = (length) => {\r\n  let result = '';\r\n  const characters =\r\n      'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n  const charactersLength = characters.length;\r\n  for (let i = 0; i < length; i++) {\r\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n  }\r\n  return result;\r\n};\r\n\r\nexport default makeid;\r\n","// Module import\nimport {Component} from 'react';\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\n\n// Asset imports\nimport 'assets/css/app.css';\n\n// Component imports\nimport Header from 'components/presentation/Header';\nimport Jumbo from 'components/presentation/Jumbo';\nimport Nominations from 'components/container/Nominations';\nimport Footer from 'components/presentation/Footer';\n\n// Action creator imports\nimport {handleInitialData} from 'redux/actions/shared';\n\n/**\n * App component\n * @component\n * @constructor\n */\nclass App extends Component {\n  static propTypes = {\n    handleInitialData: PropTypes.func,\n  }\n\n  /**\n   * Executes once component mounts\n   * @return {Promise}\n   */\n  componentDidMount = () => this.props.handleInitialData();\n\n  /**\n   * Renders App component UI\n   * @return {object} - The UI DOM object\n   */\n  render = () => <>\n    <Header />\n    <main>\n      <Jumbo />\n      <Nominations />\n    </main>\n    <Footer />\n  </>\n}\n\n// App export\nexport default connect(null, {handleInitialData})(App);\n","// Model imports\nimport {showLoading} from 'react-redux-loading';\n\n// Action creator imnports\nimport {setAuthedUser} from './authedUser';\nimport {receiveNominations} from './nominations';\n\n// Util import\nimport shoppiesAPI from 'utils/shoppiesAPI';\n\n/**\n * Gets initial data\n * @return {Promise}\n */\nexport const handleInitialData = () => (dispatch) => {\n  dispatch(showLoading());\n  dispatch(setAuthedUser());\n\n  return shoppiesAPI\n      .get('/nominations')\n      .then(({data}) => dispatch(receiveNominations(data.data)))\n      .catch((err) => console.log(err));\n};\n","// Type imports\nimport {SET_AUTHED_USER} from 'redux/actions/types';\n\n// Util imports\nimport makeid from 'utils/makeid';\n\n/**\n * Action creator to unset authed user\n * @return {action} - The action to dispatch\n */\nexport const setAuthedUser = () => (dispatch, getState) => {\n  if (!getState().authedUser) {\n    const userID = makeid(12);\n    localStorage.setItem('authedUser', userID);\n    return {type: SET_AUTHED_USER, userID};\n  }\n};\n","/**\n * Reducer function for authedUser\n * @param {id | null} state - current authedUser state\n * @param {action} action - Redux action\n * @return {id | null} - returned authedUser state\n */\nconst authedUser = (state = null, action) =>\n  ({\n    SET_AUTHED_USER: action.userID,\n  }[action.type] || localStorage.getItem('authedUser'));\n\n// Export authedUser reducer\nexport default authedUser;\n","/**\n * Reducer function for nominations\n * @param {nominations} state - current nominations state\n * @param {action} action - Redux action\n * @return {nominations} - returned nominations state\n */\nconst nominations = (state = {dbNom: [], storeNom: {}}, action) => {\n  console.log(action, state);\n  return (\n    {\n      RECEIVE_NOMINATIONS: {\n        ...state,\n        dbNom: action.nominations,\n        storeNom: {},\n      },\n      SAVE_NOMINATION: {\n        ...state,\n        storeNom: {action: action.action, nomination: action.nomination},\n      },\n      REMOVE_NOMINATION: {\n        ...state,\n        storeNom: {action: action.action, nomination: action.nomination},\n      },\n      RESOLVE_NOMINATIONS: {\n        ...state,\n        storeNom: {},\n      },\n    }[action.type] || state\n  );\n};\n\n// Export nominations reducer\nexport default nominations;\n","// Module import\nimport {combineReducers} from 'redux';\nimport {loadingBarReducer} from 'react-redux-loading';\n\n// Reducer imports\nimport authedUser from 'redux/reducers/authedUser';\nimport nominations from 'redux/reducers/nominations';\n\n// Export combineReducers\nexport default combineReducers({\n  authedUser,\n  loadingBar: loadingBarReducer,\n  nominations,\n});\n","/**\n * Logger middleware\n * @param {store} store - Redux store object\n * @return {function}\n */\nconst logger = (store) => (next) => (action) => {\n  console.group(action.type);\n  console.log('The action: ', action);\n  const returnValue = next(action);\n  console.log('The new state: ', store.getState());\n  console.groupEnd();\n\n  return returnValue;\n};\n\n\n// Logger export\nexport default logger;\n","// Module imports\nimport {applyMiddleware} from 'redux';\nimport thunk from 'redux-thunk';\n\n// Middleware import\nimport logger from 'redux/middleware/logger';\n\n// Export root middleware\nexport default applyMiddleware(thunk, logger );\n","// Module import\nimport {createStore} from 'redux';\n\n// Combinereducers import\nimport reducers from 'redux/reducers';\n\n// Middleware import\nimport middleware from 'redux/middleware';\n\n/**\n * Redux store\n * @type {store}\n */\nconst store = createStore(reducers, middleware );\n\n// Store export\nexport default store;\n","// Module imports\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport * as serviceWorkerRegistration from 'serviceWorkerRegistration';\nimport reportWebVitals from 'reportWebVitals';\n\n// Component imports\nimport App from 'components/container/App';\n\n// Asset imports\nimport 'assets/css/index.css';\n\n// Store import\nimport store from 'redux/store';\n\nReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}